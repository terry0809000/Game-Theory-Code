import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# Define Player B's payoffs
def E_b1(q1, q2):
    return 1.95 * q1 + 0.65 * q2

def E_b2(q1, q2):
    return 0.15 * q1 + 0.5 * q2

def E_b3(alpha, q1, q2):
    return (9 / 20) * alpha * q1 + (3 / 10) * alpha * q2

# Function to plot 3D diagram for Player B
def plot_player_b(alpha, ax):
    # Calculate payoffs for Player B
    E_b3_values = E_b3(alpha, q1, q2) * condition


fig = plt.figure(figsize=(8, 6))
ax = fig.add_subplot(111, projection='3d')

# Compute Player B's payoffs for alpha = 2.5
alpha = 2.5
E_b3_values = E_b3(alpha, q1, q2) * condition

# Plot surfaces for Player B's strategies
ax.plot_surface(q1, q2, E_b1(q1, q2) * condition, cmap='Blues', alpha=0.7, label='E(b1)')
ax.plot_surface(q1, q2, E_b2(q1, q2) * condition, cmap='Oranges', alpha=0.7, label='E(b2)')
ax.plot_surface(q1, q2, E_b3_values, cmap='Purples', alpha=0.7, label='E(b3)')

# Set labels and title
ax.set_title('Player B Payoff at Alpha = 2.5', fontsize=14)
ax.set_xlabel('p1 (P of Player A choosing a1)', fontsize=12)
ax.set_ylabel('p2 (P of Player A choosing a2)', fontsize=12)
ax.set_zlabel('Expected Payoff', fontsize=5)
ax.view_init(elev=30, azim=40)

plt.tight_layout()
plt.show()


# Plot Player B's payoff for alpha = 2.5
fig = plt.figure(figsize=(8, 6))
ax = fig.add_subplot(111, projection='3d')

# Compute Player B's payoffs for alpha = 2.5
alpha = 1
E_b3_values = E_b3(alpha, q1, q2) * condition

# Plot surfaces for Player B's strategies
ax.plot_surface(q1, q2, E_b1(q1, q2) * condition, cmap='Blues', alpha=0.7, label='E(b1)')
ax.plot_surface(q1, q2, E_b2(q1, q2) * condition, cmap='Oranges', alpha=0.7, label='E(b2)')
ax.plot_surface(q1, q2, E_b3_values, cmap='Purples', alpha=0.7, label='E(b3)')

# Set labels and title
ax.set_title('Player B Payoff at Alpha = 1 (Game Starts)', fontsize=14)
ax.set_xlabel('p1 (P of Player A choosing a1)', fontsize=12)
ax.set_ylabel('p2 (P of Player A choosing a2)', fontsize=12)
ax.set_zlabel('Expected Payoff', fontsize=5)
ax.view_init(elev=30, azim=40)

plt.tight_layout()
plt.show()


# Plot Player B's payoff for alpha = 2.5
fig = plt.figure(figsize=(8, 6))
ax = fig.add_subplot(111, projection='3d')

# Compute Player B's payoffs for alpha = 2.5
alpha = 6.45
E_b3_values = E_b3(alpha, q1, q2) * condition

# Plot surfaces for Player B's strategies
ax.plot_surface(q1, q2, E_b1(q1, q2) * condition, cmap='Blues', alpha=0.7, label='E(b1)')
ax.plot_surface(q1, q2, E_b2(q1, q2) * condition, cmap='Oranges', alpha=0.7, label='E(b2)')
ax.plot_surface(q1, q2, E_b3_values, cmap='Purples', alpha=0.7, label='E(b3)')

# Set labels and title
ax.set_title('Player B Payoff at Alpha = 6.45', fontsize=14)
ax.set_xlabel('p1 (P of Player A choosing a1)', fontsize=12)
ax.set_ylabel('p2 (P of Player A choosing a2)', fontsize=12)
ax.set_zlabel('Expected Payoff', fontsize=5)
ax.view_init(elev=30, azim=40)

plt.tight_layout()
plt.show()

# Plot Player B's payoff for alpha = 2.5
fig = plt.figure(figsize=(8, 6))
ax = fig.add_subplot(111, projection='3d')

# Compute Player B's payoffs for alpha = 2.5
alpha = 14
E_b3_values = E_b3(alpha, q1, q2) * condition

# Plot surfaces for Player B's strategies
ax.plot_surface(q1, q2, E_b1(q1, q2) * condition, cmap='Blues', alpha=0.7, label='E(b1)')
ax.plot_surface(q1, q2, E_b2(q1, q2) * condition, cmap='Oranges', alpha=0.7, label='E(b2)')
ax.plot_surface(q1, q2, E_b3_values, cmap='Purples', alpha=0.7, label='E(b3)')

# Set labels and title
ax.set_title('Player B Payoff at Alpha = 14 (Game Ends)', fontsize=14)
ax.set_xlabel('p1 (P of Player A choosing a1)', fontsize=12)
ax.set_ylabel('p2 (P of Player A choosing a2)', fontsize=12)
ax.set_zlabel('Expected Payoff', fontsize=5)
ax.view_init(elev=30, azim=40)

plt.tight_layout()
plt.show()
